package com.mingcloud.proxy.logiclayer.weatherhandler;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.mingcloud.proxy.common.CommonRecordTypeEnum;
import com.mingcloud.proxy.datacenter.DataCenter;
import com.mingcloud.proxy.datacenter.PositionData;
import com.mingcloud.proxy.datalayer.dto.archiveinfo.CommonrecodeexDto;
import com.mingcloud.proxy.datalayer.entity.archiveinfo.PositionEntity;
import com.mingcloud.proxy.util.HangyuPinyinHelper;
import com.mingcloud.proxy.util.HttpRequestUtil;
import org.apache.log4j.Logger;

import java.math.BigDecimal;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author ShenXD
 * @desc 天气获取线程
 * @date 2017-8-16 上午10:54:17
 */
public class WeatherDataInThread implements Runnable {
	private static Logger logger = Logger.getLogger(WeatherDataInThread.class);
	
	private String weatherRootURL = "https://free-api.heweather.com/v5/now";
//	private String keyString = "f04aeed2fa104895b81f97a50267deba";
	private String keyString = "15b14212ac3c419199295bbcaf118733";
	private DataCenter dataCenter = DataCenter.getInstance();
	
	private static PositionData positionData = PositionData.getInstance();
	
	private HangyuPinyinHelper hangyuPinyinHelper = HangyuPinyinHelper.getHangyuPinyinHelper();

	public void run() {
		while(true) {	
			try {
	            if (dataCenter.getWeatherCommonrecodeexlistSize() <= 100) {
	            	logger.info("WeatherDataInThread running...");
					GetAllPositionData();
					logger.info("WeatherDataInThread wait for 1 hours...");
					Thread.sleep(60 * 60 * 1000);
				} else {
					logger.info("WeatherDataInThread wait for 10 minutes...");
					Thread.sleep(10 * 60 * 1000);
				}
			} catch (InterruptedException e) {
				logger.error("WeatherDataInThread: " + e);
			}
		}
	}
	
	public void GetAllPositionData() {
		positionData.resetPositionList();
		List<PositionEntity> list = positionData.getWeatherPositionList();
		try {
			if (list != null && !list.isEmpty()) {
				for (PositionEntity curentity : list) {
					String cityString = curentity.getExtravarchar11();
					if(cityString != null && !"".equals(cityString)) {
						Integer id = curentity.getId();
						String systemkey = curentity.getExtravarchar32();
					    GetWeatherApiPositionData(id,systemkey,cityString);
					}
				}
			}
		} catch (Exception e) {
			logger.error("WeatherDataInThread.GetAllPositionData(): " + e);
		}
	}
	
	public void GetWeatherApiPositionData(Integer id, String systemkey, String cityString) {
        try {
			String URL = weatherRootURL ;
			
			//把城市名称转为拼音
//			String cityname = hangyuPinyinHelper.toHangyuPinyin(cityString);
			//城市名转码为UTF-8
			String cityname = URLEncoder.encode(cityString,"UTF-8");
			
			Map<String,String> param = new HashMap<String, String>();
			param.put("city", cityname);
			param.put("key", keyString);
			
			String apidata = HttpRequestUtil.httpsend(URL,param);
			
			if (apidata.equals("") || apidata == null) {
				logger.info("Failed to fetch weather information...");
				return;
			}
			
			String jsonstr = apidata.substring(15, apidata.length()-2);
			JSONObject nowJobj = JSON.parseObject(JSON.parseObject(jsonstr).getString("now"));
			
			if (nowJobj == null) {
				logger.info("Position ID-"+ id +": Invalid weather information...");
				return;
			}
						
			BigDecimal tmp = nowJobj.getBigDecimal("tmp");
			BigDecimal hum = nowJobj.getBigDecimal("hum");
			Integer spd = JSON.parseObject(nowJobj.getString("wind")).getInteger("spd");
			String coden = JSON.parseObject(nowJobj.getString("cond")).getString("txt");
			
			Date currentTime = new Date();  
		    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");  
		    String dateString = formatter.format(currentTime);  
		    Date date = formatter.parse(dateString);
			
					
			CommonrecodeexDto curdto = new CommonrecodeexDto();
			curdto.setExtraid1(id);
			curdto.setExtradatetime1(date);
			curdto.setExtradecimal1(tmp);
			curdto.setExtradecimal2(hum);
			curdto.setExtravarchar1(systemkey);
			curdto.setExtravarchar2(coden);
			curdto.setExtraint1(spd);
			curdto.setNtype(CommonRecordTypeEnum.WTH.getCommonRecordType());
			dataCenter.pushWeatherCommonrecodeexlist(curdto);
			logger.info("WeatherDataInThread.GetWeatherApiPositionData succeeded...");
		} catch(Exception e){
			logger.error("WeatherDataInThread.GetWeatherApiPositionData: " + e);
		}
	}
}
