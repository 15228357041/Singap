package com.mingcloud.proxy.logiclayer.huaweihandler;

import java.util.List;

import org.apache.log4j.Logger;

import com.mingcloud.proxy.datacenter.DataCenter;
import com.mingcloud.proxy.datalayer.dao.archiveinfo.WorkorderMapper;
import com.mingcloud.proxy.datalayer.dto.archiveinfo.WorkorderDto;
import com.mingcloud.proxy.datalayer.entity.archiveinfo.WorkorderEntity;
import com.mingcloud.proxy.util.JdbcChange;
import com.mingcloud.proxy.util.SpringContextUtil;

public class WorkorderDataInThread implements Runnable {
	private static Logger logger = Logger.getLogger(WorkorderDataInThread.class);
	
	private JdbcChange jdbcChange = JdbcChange.getJdbcChange();
	
	private DataCenter dataCenter = DataCenter.getInstance();
	
	private WorkorderMapper workorderMapper = SpringContextUtil.getBean("workorderMapper");
	
	public WorkorderDataInThread() {
		// TODO Auto-generated constructor stub
		// 设置数据源为oracle
		jdbcChange.changeJdbc(JdbcChange.mySqlDataSource);
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		logger.info("WorkorderDataInThread begin");
		
		while(true) {
			try {
				if(dataCenter.getWorkorderlistSize() < DataCenter.COMMONRECORDEXLIST_MAX_LENGTH) {
					getAllWorkorderData();
					logger.info("WorkorderDataInThread wait for 15 minutes...");
					Thread.sleep(15 * 60 * 1000);
				} else {
					logger.info("WorkorderDataInThread wait for 5 minutes...");
					Thread.sleep(5 * 60 * 1000);
				}
			} catch(Exception e) {
				logger.error("WorkorderDataInThread: " + e);
			}
		}
	}


	private void getAllWorkorderData(){
		List<WorkorderEntity> list=null;
		try{
			list=workorderMapper.selectAllWorkOrder();
			if(list != null && !list.isEmpty()) {
				for(WorkorderEntity entity : list) {
					WorkorderDto dto = new WorkorderDto();
					dto.setPriorityid(entity.getPriorityid()==null?null:entity.getPriorityid());
					dto.setId(entity.getId());
					dto.setExtradatetime5(entity.getExtradatetime5()==null?null:entity.getExtradatetime5());
					dto.setCreatedate(entity.getCreatedate());
					dto.setJobstatus(entity.getJobstatus()==null?null:entity.getJobstatus());

					dataCenter.pushWorkorderlist(dto);

				}
				logger.info("WorkorderDataInThread getAllWorkorderData succeeded...");
			}

		}catch (Exception e){
			logger.error("WorkorderDataInThread getAllWorkorderData: " + e);
		}
	}

/*	private void getAllWorkorderData() {
		// TODO Auto-generated method stub
		List<WorkorderEntity> list = null;
		try {
			list = workorderMapper.selectAllApi();
			if(list != null && !list.isEmpty()) {
				for(WorkorderEntity entity : list) {
					WorkorderDto dto = new WorkorderDto();
					dto.setWokey(entity.getWokey());
					dto.setWoname(entity.getWoname());
					dto.setMoname(entity.getMoname());
					dto.setExtravarchar1(entity.getExtravarchar1());
					dto.setErrorcode1name(entity.getErrorcode1name());
					dto.setErrorcode3name(entity.getErrorcode3name());
					dto.setOrderdate(entity.getOrderdate());
					dto.setExtravarchar2(entity.getExtravarchar2());
					dto.setJobstatus(entity.getJobstatus());
					dto.setActualstartdate(entity.getActualstartdate());
					dto.setJobexecdate(entity.getJobexecdate());
					dto.setStoptime(entity.getStoptime());
					dataCenter.pushWorkorderlist(dto);
				}
				logger.info("WorkorderDataInThread getAllWorkorderData succeeded...");
			}
		} catch(Exception e) {
			logger.error("WorkorderDataInThread getAllWorkorderData: " + e);
		}
		
	}*/

}
