package com.mingcloud.proxy.logiclayer.pmhandler;

import com.mingcloud.proxy.common.Constants;
import com.mingcloud.proxy.datalayer.dao.archiveinfo.LogMapper;
import com.mingcloud.proxy.datalayer.dao.archiveinfo.WorkorderMapper;
import com.mingcloud.proxy.datalayer.entity.archiveinfo.WorkorderEntity;
import com.mingcloud.proxy.util.SpringContextUtil;
import org.apache.log4j.Logger;

import java.util.List;

/**
 * @Author:zxf
 * @Description
 * @Date: 2019/01/09 14:22
 */
public class PmStartThread implements Runnable{
    private static Logger logger = Logger.getLogger(PmStartThread.class);
    private static LogMapper logMapper= SpringContextUtil.getBean("logMapper");
    private static WorkorderMapper workorderMapper= SpringContextUtil.getBean("workorderMapper");

    @Override
    public void run() {
        while (true) {
            try {
                logger.info("PMStartThread running...");
                startWorkorder();
                Thread.sleep(1 * 1000);
                logger.info("PMStartThread wait for 1 seconds...");
            } catch (Exception e) {
                logger.error("PMStartThread: " + e);
            }
        }
    }

    public void startWorkorder(){
        WorkorderEntity workorderEntity = new WorkorderEntity();
        List<WorkorderEntity> list = workorderMapper.selectPmWorkorder();
        for (WorkorderEntity obj:list) {
            obj.setJobstatus(Constants.WORKORDER_JOBSTATUS_START);
            workorderMapper.update(obj);
        }
    }
}
