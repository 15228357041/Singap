package com.mingcloud.proxy.logiclayer.huaweihandler;

import java.util.Date;

import org.apache.log4j.Logger;

import com.mingcloud.proxy.datacenter.DataCenter;
import com.mingcloud.proxy.datalayer.dao.archiveinfo.TechnicaldataMapper;
import com.mingcloud.proxy.datalayer.dto.archiveinfo.TechnicaldataDto;
import com.mingcloud.proxy.datalayer.entity.archiveinfo.TechnicaldataEntity;
import com.mingcloud.proxy.util.JdbcChange;
import com.mingcloud.proxy.util.SpringContextUtil;

public class TechnicaldataDataOutThread implements Runnable {
	private static Logger logger = Logger.getLogger(TechnicaldataDataOutThread.class);
	
	private JdbcChange jdbcChange = JdbcChange.getJdbcChange();
	
	private DataCenter dataCenter = DataCenter.getInstance();
	
	private TechnicaldataMapper technicaldataMapper = SpringContextUtil.getBean("technicaldataMapper");
	
	private static Integer technicaldatalistSize = 0;
	
	public TechnicaldataDataOutThread() {
		// TODO Auto-generated constructor stub
		// 设置数据源为MySql
		jdbcChange.changeJdbc(JdbcChange.mySqlDataSource);
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		logger.info("TechnicaldataDataOutThread begin");
		
		while(true) {
			try {
				if(dataCenter.getTechnicaldatalistSize() > 0) {
					technicaldatalistSize = dataCenter.getTechnicaldatalistSize();
					InsertTechnicaldata();
					logger.info("TechnicaldataDataOutThread Size:" + (technicaldatalistSize-1));
				}
				Thread.sleep(50);
			} catch(Exception e) {
				logger.error("TechnicaldataDataOutThread: " + e);
			}
		}
	}

	private void InsertTechnicaldata() {
		// TODO Auto-generated method stub
		try {
			TechnicaldataDto dto = dataCenter.popTechnicaldatalist();
			TechnicaldataEntity entity = new TechnicaldataEntity();
			String tdkey = "";
			if(!dto.getTdkey().replace("最大值", "范围").equals(dto.getTdkey())) {
				tdkey = dto.getTdkey().replace("最大值", "范围");
				entity.setTdkey(tdkey);
			} else if(!dto.getTdkey().replace("最小值", "范围").equals(dto.getTdkey())) {
				tdkey = dto.getTdkey().replace("最小值", "范围");
				entity.setTdkey(tdkey);
			}
			
			if(!tdkey.equals("")) {
				TechnicaldataEntity technicalEntity = technicaldataMapper.get(entity);
				Date date = new Date();
				if(technicalEntity != null && !technicalEntity.equals("")) {
					entity.setExtravarchar1(dto.getExtravarchar1());
					entity.setModificationdate(date);
					entity.setId(technicalEntity.getId());
					technicaldataMapper.update(entity);
					logger.info("TechnicaldataDataOutThread update succeeded...");
				} else {
					entity.setExtravarchar1(dto.getExtravarchar1());
					entity.setModificationdate(date);
					entity.setCreatedate(date);
					technicaldataMapper.insert(entity);
					logger.info("TechnicaldataDataOutThread insert succeeded...");
				}
			}
		} catch(Exception e) {
			logger.error("TechnicaldataDataOutThread InsertTechnicaldata: " + e);
		}
	}

}
