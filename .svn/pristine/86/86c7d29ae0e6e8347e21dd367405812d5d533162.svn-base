<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">
        
    <!--1:配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--<context:property-placeholder location="file:C:/proxy/jdbc.properties"/>-->
    <bean id="mySqlDataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
        <!-- 配置连接池属性 -->
        <property name="driverClassName" value="${jdbc.mysql.driver}"/>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="username" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
        
        <!-- 配置初始大小、最大及最小 -->
        <property name="initialSize" value="${jdbc.initialSize}" />  
        <property name="minIdle" value="${jdbc.minIdle}" />   
        <property name="maxActive" value="${jdbc.maxActive}" />
        
        <!-- 配置获取连接等待超时的时间 -->  
	    <property name="maxWait" value="${jdbc.maxWait}" />  	
	      
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	    <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" /> 
	    
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	    <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />  
	    
	    <property name="validationQuery" value="${jdbc.validationQuery}" />  
	    <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />  
	    <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />  
	    <property name="testOnReturn" value="${jdbc.testOnReturn}" />  
	  
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
	    <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />  
	  
	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
	    <property name="filters" value="${jdbc.filters}" />  
	    
	    <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
    </bean>
    <!--<bean id="sqlServerDataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
        <!--init-method="init" destroy-method="close">-->
        <!--&lt;!&ndash; 配置连接池属性 &ndash;&gt;-->
        <!--<property name="driverClassName" value="${jdbc.sqlserver.driver}"/>-->
        <!--<property name="url" value="${jdbc.sqlserver.url}"/>-->
        <!--<property name="username" value="${jdbc.sqlserver.username}"/>-->
        <!--<property name="password" value="${jdbc.sqlserver.password}"/>-->
        <!---->
        <!--&lt;!&ndash; 配置初始大小、最大及最小 &ndash;&gt;-->
        <!--<property name="initialSize" value="${jdbc.initialSize}" />  -->
        <!--<property name="minIdle" value="${jdbc.minIdle}" />   -->
        <!--<property name="maxActive" value="${jdbc.maxActive}" />-->
        <!---->
        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;  -->
	    <!--<property name="maxWait" value="${jdbc.maxWait}" />  	-->
	      <!---->
	    <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;  -->
	    <!--<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" /> -->
	    <!---->
	    <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;  -->
	    <!--<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />  -->
	    <!---->
	    <!--<property name="validationQuery" value="${jdbc.validationQuery}" />  -->
	    <!--<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />  -->
	    <!--<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />  -->
	    <!--<property name="testOnReturn" value="${jdbc.testOnReturn}" />  -->
	  <!---->
	    <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;  -->
	    <!--<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />  -->
	    <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />  -->
	  <!---->
	    <!--&lt;!&ndash; 配置监控统计拦截的filters，去掉后监控界面sql无法统计 &ndash;&gt;  -->
	    <!--<property name="filters" value="${jdbc.filters}" />  -->
	    <!---->
	    <!--<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />-->
        <!--<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />-->
    <!--</bean>-->
    <bean id="multipleDataSource" class="com.mingcloud.proxy.util.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="mySqlDataSource"/>
        <property name="targetDataSources">
            <map>
                <entry key="mySqlDataSource" value-ref="mySqlDataSource"/>
                <!--<entry key="sqlServerDataSource" value-ref="sqlServerDataSource"/>-->
                <!-- <entry key="oracleDataSource" value-ref="oracleDataSource"/> -->
            </map>
        </property>
    </bean>
    <!-- 2:配置sqlsessionfactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="multipleDataSource"/>
        <property name="configLocation" value="classpath:Configuration.xml"/>
        <property name="typeAliasesPackage" value="com.mingcloud.proxy.datalayer.dto,com.mingcloud.proxy.datalayer.entity,com.mingcloud.proxy.datalayer.dao.archiveinfo"/>
        <property name="mapperLocations" value="classpath:com/mingcloud/proxy/datalayer/dao/archiveinfo/*.xml"/>
    </bean>
    
    <!-- 3:配置扫描dao接口包，动态实现dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.mingcloud.proxy.datalayer.dao.archiveinfo"/>

    </bean>
    
    <context:component-scan base-package="com.mingcloud.proxy.logiclayer.weatherhandler,com.mingcloud.proxy.logiclayer.vcomhandler"/>

    <!-- 4:配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库的连接池 -->
        <property name="dataSource" ref="multipleDataSource"/>
    </bean>
    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- 5:注册Spring工具类 -->
    <bean id="springContextUtil" class="com.mingcloud.proxy.util.SpringContextUtil"></bean>
    
</beans>