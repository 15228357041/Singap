<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingcloud.proxy.datalayer.dao.archiveinfo.LogMapper">

    <sql id="table_name">
		log
	</sql>

    <sql id="table_id">
        <include refid="table_name"/>.id
    </sql>

    <sql id="database_table_columns">
        <include refid="table_name"/>.id,
        <include refid="table_name"/>.logkey,
        <include refid="table_name"/>.logname,
        <include refid="table_name"/>.loggroupid,
        <include refid="table_name"/>.rootlogid,
        <include refid="table_name"/>.typeid,
        <include refid="table_name"/>.statusid,
        <include refid="table_name"/>.extravarchar1,
        <include refid="table_name"/>.extravarchar2,
        <include refid="table_name"/>.extravarchar3,
        <include refid="table_name"/>.extravarchar4,
        <include refid="table_name"/>.extravarchar5,
        <include refid="table_name"/>.extravarchar6,
        <include refid="table_name"/>.extravarchar7,
        <include refid="table_name"/>.extravarchar8,
        <include refid="table_name"/>.extravarchar9,
        <include refid="table_name"/>.extravarchar10,
        <include refid="table_name"/>.extradecimal1,
        <include refid="table_name"/>.extradecimal2,
        <include refid="table_name"/>.extradecimal3,
        <include refid="table_name"/>.extradecimal4,
        <include refid="table_name"/>.extradecimal5,
        <include refid="table_name"/>.extraint1,
        <include refid="table_name"/>.extraint2,
        <include refid="table_name"/>.extraint3,
        <include refid="table_name"/>.extraint4,
        <include refid="table_name"/>.extraint5,
        <include refid="table_name"/>.createdate,
        <include refid="table_name"/>.createuserid,
        <include refid="table_name"/>.modificationdate,
        <include refid="table_name"/>.modificationuserid,
        <include refid="table_name"/>.picpath,
        <include refid="table_name"/>.barcode,
        <include refid="table_name"/>.memo,
        <include refid="table_name"/>.orgid,
        <include refid="table_name"/>.accountid,
        <include refid="table_name"/>.tombstone,
        <include refid="table_name"/>.extraid1,
        <include refid="table_name"/>.extraid2,
        <include refid="table_name"/>.extraid3,
        <include refid="table_name"/>.extraid4,
        <include refid="table_name"/>.extraid5,
        <include refid="table_name"/>.extradatetime1,
        <include refid="table_name"/>.extradatetime2,
        <include refid="table_name"/>.extradatetime3,
        <include refid="table_name"/>.extradatetime4,
        <include refid="table_name"/>.extradatetime5
    </sql>

    <sql id="update_log_where">
        <trim prefix="" suffix="" suffixOverrides=",">
            <if test="logkey != null">
                logkey = #{logkey,jdbcType=VARCHAR},
            </if>
            <if test="logname != null">
                logname = #{logname,jdbcType=VARCHAR},
            </if>
            <if test="loggroupid != null">
                loggroupid = #{loggroupid,jdbcType=INTEGER},
            </if>
            <if test="rootlogid != null">
                rootlogid = #{rootlogid,jdbcType=INTEGER},
            </if>
            <if test="typeid != null">
                typeid = #{typeid,jdbcType=INTEGER},
            </if>
            <if test="statusid != null">
                statusid = #{statusid,jdbcType=INTEGER},
            </if>
            <if test="extravarchar1 != null">
                extravarchar1 = #{extravarchar1,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar2 != null">
                extravarchar2 = #{extravarchar2,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar3 != null">
                extravarchar3 = #{extravarchar3,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar4 != null">
                extravarchar4 = #{extravarchar4,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar5 != null">
                extravarchar5 = #{extravarchar5,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar6 != null">
                extravarchar6 = #{extravarchar6,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar7 != null">
                extravarchar7 = #{extravarchar7,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar8 != null">
                extravarchar8 = #{extravarchar8,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar9 != null">
                extravarchar9 = #{extravarchar9,jdbcType=VARCHAR},
            </if>
            <if test="extravarchar10 != null">
                extravarchar10 = #{extravarchar10,jdbcType=VARCHAR},
            </if>
            <if test="extradecimal1 != null">
                extradecimal1 = #{extradecimal1,jdbcType=DECIMAL},
            </if>
            <if test="extradecimal2 != null">
                extradecimal2 = #{extradecimal2,jdbcType=DECIMAL},
            </if>
            <if test="extradecimal3 != null">
                extradecimal3 = #{extradecimal3,jdbcType=DECIMAL},
            </if>
            <if test="extradecimal4 != null">
                extradecimal4 = #{extradecimal4,jdbcType=DECIMAL},
            </if>
            <if test="extradecimal5 != null">
                extradecimal5 = #{extradecimal5,jdbcType=DECIMAL},
            </if>
            <if test="extraint1 != null">
                extraint1 = #{extraint1,jdbcType=INTEGER},
            </if>
            <if test="extraint2 != null">
                extraint2 = #{extraint2,jdbcType=INTEGER},
            </if>
            <if test="extraint3 != null">
                extraint3 = #{extraint3,jdbcType=INTEGER},
            </if>
            <if test="extraint4 != null">
                extraint4 = #{extraint4,jdbcType=INTEGER},
            </if>
            <if test="extraint5 != null">
                extraint5 = #{extraint5,jdbcType=INTEGER},
            </if>
            <if test="createdate != null">
                createdate = #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="createuserid != null">
                createuserid = #{createuserid,jdbcType=INTEGER},
            </if>
            <if test="modificationdate != null">
                modificationdate = #{modificationdate,jdbcType=TIMESTAMP},
            </if>
            <if test="modificationuserid != null">
                modificationuserid = #{modificationuserid,jdbcType=INTEGER},
            </if>
            <if test="picpath != null">
                picpath = #{picpath,jdbcType=VARCHAR},
            </if>
            <if test="barcode != null">
                barcode = #{barcode,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="orgid != null">
                orgid = #{orgid,jdbcType=INTEGER},
            </if>
            <if test="accountid != null">
                accountid = #{accountid,jdbcType=INTEGER},
            </if>
            <if test="tombstone != null">
                tombstone = #{tombstone,jdbcType=INTEGER},
            </if>
            <if test="extraid1 != null">
                extraid1 = #{extraid1,jdbcType=INTEGER},
            </if>
            <if test="extraid2 != null">
                extraid2 = #{extraid2,jdbcType=INTEGER},
            </if>
            <if test="extraid3 != null">
                extraid3 = #{extraid3,jdbcType=INTEGER},
            </if>
            <if test="extraid4 != null">
                extraid4 = #{extraid4,jdbcType=INTEGER},
            </if>
            <if test="extraid5 != null">
                extraid5 = #{extraid5,jdbcType=INTEGER},
            </if>
            <if test="extradatetime1 != null">
                extradatetime1 = #{extradatetime1,jdbcType=TIMESTAMP},
            </if>
            <if test="extradatetime2 != null">
                extradatetime2 = #{extradatetime2,jdbcType=TIMESTAMP},
            </if>
            <if test="extradatetime3 != null">
                extradatetime3 = #{extradatetime3,jdbcType=TIMESTAMP},
            </if>
            <if test="extradatetime4 != null">
                extradatetime4 = #{extradatetime4,jdbcType=TIMESTAMP},
            </if>
            <if test="extradatetime5 != null">
                extradatetime5 = #{extradatetime5,jdbcType=TIMESTAMP}
            </if>
        </trim>
    </sql>

    <sql id="dynamic_full_match_condition">
        <trim prefix="WHERE" prefixOverrides="AND">
            1 = 1
            <if test="id != null">
                AND<include refid="table_name"/>.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="logkey != null">
                AND<include refid="table_name"/>.logkey = #{logkey,jdbcType=VARCHAR}
            </if>
            <if test="logname != null">
                AND<include refid="table_name"/>.logname = #{logname,jdbcType=VARCHAR}
            </if>
            <if test="loggroupid != null">
                AND<include refid="table_name"/>.loggroupid = #{loggroupid,jdbcType=INTEGER}
            </if>
            <if test="rootlogid != null">
                AND<include refid="table_name"/>.rootlogid = #{rootlogid,jdbcType=INTEGER}
            </if>
            <if test="typeid != null">
                AND<include refid="table_name"/>.typeid = #{typeid,jdbcType=INTEGER}
            </if>
            <if test="statusid != null">
                AND<include refid="table_name"/>.statusid = #{statusid,jdbcType=INTEGER}
            </if>
            <if test="extravarchar1 != null">
                AND<include refid="table_name"/>.extravarchar1 = #{extravarchar1,jdbcType=VARCHAR}
            </if>
            <if test="extravarchar2 != null">
                AND<include refid="table_name"/>.extravarchar2 = #{extravarchar2,jdbcType=VARCHAR}
            </if>
            <if test="extravarchar3 != null">
                AND<include refid="table_name"/>.extravarchar3 = #{extravarchar3,jdbcType=VARCHAR}
            </if>
            <if test="extravarchar4 != null">
                AND<include refid="table_name"/>.extravarchar4 = #{extravarchar4,jdbcType=VARCHAR}
            </if>
            <if test="extravarchar5 != null">
                AND<include refid="table_name"/>.extravarchar5 = #{extravarchar5,jdbcType=VARCHAR}
            </if>
            <if test="extradecimal1 != null">
                AND<include refid="table_name"/>.extradecimal1 = #{extradecimal1,jdbcType=DECIMAL}
            </if>
            <if test="extradecimal2 != null">
                AND<include refid="table_name"/>.extradecimal2 = #{extradecimal2,jdbcType=DECIMAL}
            </if>
            <if test="extradecimal3 != null">
                AND<include refid="table_name"/>.extradecimal3 = #{extradecimal3,jdbcType=DECIMAL}
            </if>
            <if test="extradecimal4 != null">
                AND<include refid="table_name"/>.extradecimal4 = #{extradecimal4,jdbcType=DECIMAL}
            </if>
            <if test="extradecimal5 != null">
                AND<include refid="table_name"/>.extradecimal5 = #{extradecimal5,jdbcType=DECIMAL}
            </if>
            <if test="extraint1 != null">
                AND<include refid="table_name"/>.extraint1 = #{extraint1,jdbcType=INTEGER}
            </if>
            <if test="extraint2 != null">
                AND<include refid="table_name"/>.extraint2 = #{extraint2,jdbcType=INTEGER}
            </if>
            <if test="extraint3 != null">
                AND<include refid="table_name"/>.extraint3 = #{extraint3,jdbcType=INTEGER}
            </if>
            <if test="extraint4 != null">
                AND<include refid="table_name"/>.extraint4 = #{extraint4,jdbcType=INTEGER}
            </if>
            <if test="extraint5 != null">
                AND<include refid="table_name"/>.extraint5 = #{extraint5,jdbcType=INTEGER}
            </if>
            <if test="startDate != null and endDate !=null">

                AND <![CDATA[   (
									log.createdate >=  #{startDate,jdbcType=TIMESTAMP}
									AND log.createdate <=  #{endDate,jdbcType=TIMESTAMP}
									)
							]]>
            </if>

            <if test="createdate != null">
                AND<include refid="table_name"/>.createdate = #{createdate,jdbcType=TIMESTAMP}
            </if>
            <if test="createuserid != null">
                AND<include refid="table_name"/>.createuserid = #{createuserid,jdbcType=INTEGER}
            </if>
            <if test="modificationdate != null">
                AND<include refid="table_name"/>.modificationdate = #{modificationdate,jdbcType=TIMESTAMP}
            </if>
            <if test="modificationuserid != null">
                AND<include refid="table_name"/>.modificationuserid = #{modificationuserid,jdbcType=INTEGER}
            </if>
            <if test="picpath != null">
                AND<include refid="table_name"/>.picpath = #{picpath,jdbcType=VARCHAR}
            </if>
            <if test="barcode != null">
                AND<include refid="table_name"/>.barcode = #{barcode,jdbcType=VARCHAR}
            </if>
            <if test="memo != null">
                AND<include refid="table_name"/>.memo = #{memo,jdbcType=VARCHAR}
            </if>
            <if test="orgid != null">
                AND<include refid="table_name"/>.orgid = #{orgid,jdbcType=INTEGER}
            </if>
            <if test="accountid != null">
                AND<include refid="table_name"/>.accountid = #{accountid,jdbcType=INTEGER}
            </if>
            AND<include refid="table_name"/>.tombstone =1
            <if test="extraid1 != null">
                AND<include refid="table_name"/>.extraid1 = #{extraid1,jdbcType=INTEGER}
            </if>
            <if test="extraid2 != null">
                AND<include refid="table_name"/>.extraid2 = #{extraid2,jdbcType=INTEGER}
            </if>
            <if test="extraid3 != null">
                AND<include refid="table_name"/>.extraid3 = #{extraid3,jdbcType=INTEGER}
            </if>
            <if test="extraid4 != null">
                AND<include refid="table_name"/>.extraid4= #{extraid4,jdbcType=INTEGER}
            </if>
            <if test="extraid5 != null">
                AND<include refid="table_name"/>.extraid5= #{extraid5,jdbcType=INTEGER}
            </if>
            <if test="extravarchar6 != null">
                AND<include refid="table_name"/>.extravarchar6 = #{extravarchar6,jdbcType=VARCHAR}
            </if>
            <if test="extravarchar7 != null">
                AND<include refid="table_name"/>.extravarchar7 = #{extravarchar7,jdbcType=VARCHAR}
            </if>
            <if test="extravarchar8 != null">
                AND<include refid="table_name"/>.extravarchar8 = #{extravarchar8,jdbcType=VARCHAR}
            </if>
            <if test="extravarchar9 != null">
                AND<include refid="table_name"/>.extravarchar9 = #{extravarchar9,jdbcType=VARCHAR}
            </if>
            <if test="extravarchar10 != null">
                AND<include refid="table_name"/>.extravarchar10 = #{extravarchar10,jdbcType=VARCHAR}
            </if>
            <if test="extradatetime1 != null">
                AND<include refid="table_name"/>.extradatetime1= #{extradatetime1,jdbcType=TIMESTAMP}
            </if>
            <if test="extradatetime2 != null">
                AND<include refid="table_name"/>.extradatetime2= #{extradatetime2,jdbcType=TIMESTAMP}
            </if>
            <if test="extradatetime3 != null">
                AND<include refid="table_name"/>.extradatetime3= #{extradatetime3,jdbcType=TIMESTAMP}
            </if>
            <if test="extradatetime4 != null">
                AND<include refid="table_name"/>.extradatetime4= #{extradatetime4,jdbcType=TIMESTAMP}
            </if>
            <if test="extradatetime5 != null">
                AND<include refid="table_name"/>.extradatetime5 = #{extradatetime5,jdbcType=TIMESTAMP}
            </if>
        </trim>
    </sql>

    <sql id="relation_columns">
		basestatus.basestatusname,
		basetype.basetypename 
	</sql>

    <sql id="user_relation_columns">
		users.username
	</sql>

    <insert id="insert" parameterType="LogEntity"
            useGeneratedKeys="true" keyProperty="id">
        insert into
        <include refid="table_name"/>
        (
        logkey,
        logname,
        loggroupid,
        rootlogid,
        typeid,
        statusid,
        extravarchar1,
        extravarchar2,
        extravarchar3,
        extravarchar4,
        extravarchar5,
        extravarchar6,
        extravarchar7,
        extravarchar8,
        extravarchar9,
        extravarchar10,
        extradecimal1,
        extradecimal2,
        extradecimal3,
        extradecimal4,
        extradecimal5,
        extraint1,
        extraint2,
        extraint3,
        extraint4,
        extraint5,
        createdate,
        createuserid,
        modificationdate,
        modificationuserid,
        picpath,
        barcode,
        memo,
        orgid,
        accountid,
        tombstone,
        extraid1,
        extraid2,
        extraid3,
        extraid4,
        extraid5,
        extradatetime1,
        extradatetime2,
        extradatetime3,
        extradatetime4,
        extradatetime5
        )
        values
        (
        #{logkey,jdbcType=VARCHAR},
        #{logname,jdbcType=VARCHAR},
        #{loggroupid,jdbcType=INTEGER},
        #{rootlogid,jdbcType=INTEGER},
        #{typeid,jdbcType=INTEGER},
        #{statusid,jdbcType=INTEGER},
        #{extravarchar1,jdbcType=VARCHAR},
        #{extravarchar2,jdbcType=VARCHAR},
        #{extravarchar3,jdbcType=VARCHAR},
        #{extravarchar4,jdbcType=VARCHAR},
        #{extravarchar5,jdbcType=VARCHAR},
        #{extravarchar6,jdbcType=VARCHAR},
        #{extravarchar7,jdbcType=VARCHAR},
        #{extravarchar8,jdbcType=VARCHAR},
        #{extravarchar9,jdbcType=VARCHAR},
        #{extravarchar10,jdbcType=VARCHAR},
        #{extradecimal1,jdbcType=DECIMAL},
        #{extradecimal2,jdbcType=DECIMAL},
        #{extradecimal3,jdbcType=DECIMAL},
        #{extradecimal4,jdbcType=DECIMAL},
        #{extradecimal5,jdbcType=DECIMAL},
        #{extraint1,jdbcType=INTEGER},
        #{extraint2,jdbcType=INTEGER},
        #{extraint3,jdbcType=INTEGER},
        #{extraint4,jdbcType=INTEGER},
        #{extraint5,jdbcType=INTEGER},
        #{createdate,jdbcType=TIMESTAMP},
        #{createuserid,jdbcType=INTEGER},
        #{modificationdate,jdbcType=TIMESTAMP},
        #{modificationuserid,jdbcType=INTEGER},
        #{picpath,jdbcType=VARCHAR},
        #{barcode,jdbcType=VARCHAR},
        #{memo,jdbcType=VARCHAR},
        #{orgid,jdbcType=INTEGER},
        #{accountid,jdbcType=INTEGER},
        1,
        #{extraid1,jdbcType=INTEGER},
        #{extraid2,jdbcType=INTEGER},
        #{extraid3,jdbcType=INTEGER},
        #{extraid4,jdbcType=INTEGER},
        #{extraid5,jdbcType=INTEGER},
        #{extradatetime1,jdbcType=TIMESTAMP},
        #{extradatetime2,jdbcType=TIMESTAMP},
        #{extradatetime3,jdbcType=TIMESTAMP},
        #{extradatetime4,jdbcType=TIMESTAMP},
        #{extradatetime5,jdbcType=TIMESTAMP}
        )
    </insert>

    <!-- 逻辑删除，为更新 -->
    <update id="delete" parameterType="LogEntity">
        update
        <include refid="table_name"/>
        <set>
            <trim prefix="" suffix="" suffixOverrides=",">
                tombstone = 0,
                <if test="modificationdate != null">
                    modificationdate = #{modificationdate,jdbcType=TIMESTAMP},
                </if>
                <if test="modificationuserid != null">
                    modificationuserid = #{modificationuserid,jdbcType=INTEGER},
                </if>
            </trim>
        </set>
        where
        <include refid="table_id"/>
        = #{id,jdbcType=INTEGER}
    </update>

    <update id="update" parameterType="LogEntity">
        update
        <include refid="table_name"/>
        <set>
            <include refid="update_log_where"/>
        </set>
        where
        <include refid="table_id"/>=#{id,jdbcType=INTEGER}
    </update>

    <resultMap id="BaseResultMap" type="LogEntity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="logkey" property="logkey" jdbcType="VARCHAR"/>
        <result column="logname" property="logname" jdbcType="VARCHAR"/>
        <result column="loggroupid" property="loggroupid" jdbcType="INTEGER"/>
        <result column="rootlogid" property="rootlogid" jdbcType="INTEGER"/>
        <result column="typeid" property="typeid" jdbcType="INTEGER"/>
        <result column="statusid" property="statusid" jdbcType="INTEGER"/>
        <result column="extravarchar1" property="extravarchar1" jdbcType="VARCHAR"/>
        <result column="extravarchar2" property="extravarchar2" jdbcType="VARCHAR"/>
        <result column="extravarchar3" property="extravarchar3" jdbcType="VARCHAR"/>
        <result column="extravarchar4" property="extravarchar4" jdbcType="VARCHAR"/>
        <result column="extravarchar5" property="extravarchar5" jdbcType="VARCHAR"/>
        <result column="extravarchar6" property="extravarchar6" jdbcType="VARCHAR"/>
        <result column="extravarchar7" property="extravarchar7" jdbcType="VARCHAR"/>
        <result column="extravarchar8" property="extravarchar8" jdbcType="VARCHAR"/>
        <result column="extravarchar9" property="extravarchar9" jdbcType="VARCHAR"/>
        <result column="extravarchar10" property="extravarchar10" jdbcType="VARCHAR"/>
        <result column="extradecimal1" property="extradecimal1" jdbcType="DECIMAL"/>
        <result column="extradecimal2" property="extradecimal2" jdbcType="DECIMAL"/>
        <result column="extradecimal3" property="extradecimal3" jdbcType="DECIMAL"/>
        <result column="extradecimal4" property="extradecimal4" jdbcType="DECIMAL"/>
        <result column="extradecimal5" property="extradecimal5" jdbcType="DECIMAL"/>
        <result column="extraint1" property="extraint1" jdbcType="INTEGER"/>
        <result column="extraint2" property="extraint2" jdbcType="INTEGER"/>
        <result column="extraint3" property="extraint3" jdbcType="INTEGER"/>
        <result column="extraint4" property="extraint4" jdbcType="INTEGER"/>
        <result column="extraint5" property="extraint5" jdbcType="INTEGER"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="createuserid" property="createuserid" jdbcType="INTEGER"/>
        <result column="modificationdate" property="modificationdate" jdbcType="TIMESTAMP"/>
        <result column="modificationuserid" property="modificationuserid" jdbcType="INTEGER"/>
        <result column="picpath" property="picpath" jdbcType="VARCHAR"/>
        <result column="barcode" property="barcode" jdbcType="VARCHAR"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="orgid" property="orgid" jdbcType="INTEGER"/>
        <result column="accountid" property="accountid" jdbcType="INTEGER"/>
        <result column="tombstone" property="tombstone" jdbcType="INTEGER"/>
        <result column="extraid1" property="extraid1" jdbcType="INTEGER"/>
        <result column="extraid2" property="extraid2" jdbcType="INTEGER"/>
        <result column="extraid3" property="extraid3" jdbcType="INTEGER"/>
        <result column="extraid4" property="extraid4" jdbcType="INTEGER"/>
        <result column="extraid5" property="extraid5" jdbcType="INTEGER"/>
        <result column="extradatetime1" property="extradatetime1" jdbcType="TIMESTAMP"/>
        <result column="extradatetime2" property="extradatetime2" jdbcType="TIMESTAMP"/>
        <result column="extradatetime3" property="extradatetime3" jdbcType="TIMESTAMP"/>
        <result column="extradatetime4" property="extradatetime4" jdbcType="TIMESTAMP"/>
        <result column="extradatetime5" property="extradatetime5" jdbcType="TIMESTAMP"/>
        <!-- end ex -->
    </resultMap>

    <select id="isExistByProperty" parameterType="LogEntity"
            resultType="int">
        SELECT COUNT(1)
        FROM
        <include refid="table_name"/>
        <include refid="dynamic_full_match_condition"/>
    </select>

    <select id="select" parameterType="LogEntity"
            resultMap="BaseResultMap">
        SELECT
        <include refid="database_table_columns"/>,
        <include refid="relation_columns"/>
        FROM
        <include refid="table_name"/>
        LEFT JOIN basestatus on<include refid="table_name"/>.statusid = basestatus.id
        LEFT JOIN basetype on<include refid="table_name"/>.typeid = basetype.id
        <include refid="dynamic_full_match_condition"/>
    </select>

    <!-- <select id="select" parameterType="LogEntity"
        resultMap="BaseResultMap" databaseId="oracle">
        SELECT
        <include refid="database_table_columns"/>,
        <include refid="relation_columns"/>
        FROM
        <include refid="table_name" />
        LEFT JOIN basestatus on <include refid="table_name"/>.statusid = basestatus.id
        LEFT JOIN basetype on  <include refid="table_name"/>.typeid = basetype.id
        <include refid="dynamic_full_match_condition" />
    </select> -->

    <select id="selectAllChildren" parameterType="LogEntity"
            resultMap="BaseResultMap">
        SELECT
        <include refid="database_table_columns"/>
        FROM
        <include refid="table_name"/>
        <include refid="dynamic_full_match_condition"/>
    </select>

    <select id="selectPage" parameterType="LogEntity" resultMap="BaseResultMap" databaseId="mysql">
        SELECT
        <include refid="database_table_columns"/>,
        <include refid="user_relation_columns"/>
        FROM
        <include refid="table_name"/>
        LEFT JOIN users on<include refid="table_name"/>.createuserid = users.id
        <include refid="dynamic_full_match_condition"/>
        order by
        <include refid="table_id"/>
        desc limit #{offset},#{span}
    </select>

    <select id="selectPage" parameterType="LogEntity"
            resultMap="BaseResultMap" databaseId="oracle">
        SELECT b.*,ROWNUM  FROM
        ( SELECT a.*, ROWNUM row_num FROM (
        SELECT
        <include refid="database_table_columns"/>,
        <include refid="user_relation_columns"/>
        FROM
        <include refid="table_name"/>
        LEFT JOIN users on<include refid="table_name"/>.createuserid = users.id
        <include refid="dynamic_full_match_condition"/>
        order by
        <include refid="table_id"/>
        desc
        ) a ) b
        WHERE
        b.ROW_NUM BETWEEN #{offset} + 1
        AND #{span} + #{offset}

    </select>
    <select id="selectCount" parameterType="LogEntity"
            resultType="int">
        SELECT COUNT(1)
        FROM
        <include refid="table_name"/>
        <include refid="dynamic_full_match_condition"/>
    </select>

    <select id="get" parameterType="LogEntity" resultMap="BaseResultMap">
        SELECT
        <include refid="database_table_columns"/>
        from
        <include refid="table_name"/>
        where
        <include refid="table_id"/>
        = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectOne" parameterType="LogEntity" resultMap="BaseResultMap" databaseId="mysql">
        SELECT
        <include refid="database_table_columns"/>
        FROM
        <include refid="table_name"/>
        <include refid="dynamic_full_match_condition"/>
        limit 1
    </select>

    <select id="selectOne" parameterType="LogEntity" resultMap="BaseResultMap" databaseId="oracle">
        SELECT b.*,ROWNUM  FROM
        ( SELECT a.*, ROWNUM row_num FROM (
        SELECT
        <include refid="database_table_columns"/>
        FROM
        <include refid="table_name"/>
        <include refid="dynamic_full_match_condition"/>
        ) a ) b
        WHERE
        b.ROW_NUM = 1
    </select>

    <select id="selectAll" parameterType="LogEntity" resultMap="BaseResultMap">
        SELECT
        <include refid="database_table_columns"/>
        FROM
        <include refid="table_name"/>
        order by
        <include refid="table_id"/>
        desc
    </select>

    <select id="selectAllPage" parameterType="LogEntity" resultMap="BaseResultMap" databaseId="mysql">
        SELECT
        <include refid="database_table_columns"/>
        FROM
        <include refid="table_name"/>
        order by
        <include refid="table_id"/>
        desc limit #{offset},#{span}
    </select>

    <select id="selectAllPage" parameterType="LogEntity" resultMap="BaseResultMap" databaseId="oracle">

        SELECT b.*,ROWNUM  FROM
        ( SELECT a.*, ROWNUM row_num FROM (
        SELECT
        <include refid="database_table_columns"/>
        FROM
        <include refid="table_name"/>
        <include refid="dynamic_full_match_condition"/>
        order by
        <include refid="table_id"/>
        desc
        ) a ) b
        WHERE
        b.ROW_NUM BETWEEN #{offset} + 1
        AND #{span} + #{offset}
    </select>

    <!-- 根据节点id获取优先级树的路径(java实现) 通过Id 查询父id -->
    <select id="selectRootIdById" parameterType="LogEntity"
            resultMap="BaseResultMap">
        SELECT IFNULL(loggroupid,0) loggroupid ,count(1) counttotal,id
        FROM
        <include refid="table_name"/>
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!-- <select id="getLogKey"  parameterType="map" statementType="STATEMENT"
        resultType="String">
        select ${key} as oldkey
        from ${tablename}
        WHERE id =${id}

    </select> -->

    <select id="getLogKey" parameterType="map" statementType="STATEMENT"
            resultType="String">
        select ${key} as oldkey
        from ${tablename}
        WHERE id = ${id}
    </select>

</mapper>