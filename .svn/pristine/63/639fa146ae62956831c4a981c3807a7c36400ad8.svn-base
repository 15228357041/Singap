package com.mingcloud.proxy.logiclayer.inspectionpointhandler;

import com.mingcloud.proxy.datacenter.DataCenter;
import com.mingcloud.proxy.datalayer.dao.archiveinfo.InspectionPointMapper;
import com.mingcloud.proxy.datalayer.dto.inspection.InspectionPointDto;
import com.mingcloud.proxy.util.JdbcChange;
import com.mingcloud.proxy.util.SpringContextUtil;
import org.apache.log4j.Logger;

import java.util.List;

public class InspectionPointDataInThread implements Runnable{

    private static Logger logger = Logger.getLogger(InspectionPointDataInThread.class);

    private JdbcChange jdbcChange = JdbcChange.getJdbcChange();

    private DataCenter dataCenter = DataCenter.getInstance();

    private InspectionPointMapper inspectionPointMapper = SpringContextUtil.getBean("inspectionPointMapper");

    @Override
    public void run() {
        logger.info("inspectionPointDataInThread begin ...");
        // 设置数据源为oracle
        jdbcChange.changeJdbc(JdbcChange.oracleDataSource);
        logger.info("inspectionPointDataInThread change to oracleDataSource");
        while (true) {
            try {
                if (dataCenter.getInspectionPointListSize() < dataCenter.COMMONRECORDEXLIST_MAX_LENGTH) {
                    getAllInspectionPointData();
                    logger.info("inspectionPointDataInThread wait for 60 minutes...");
                    Thread.sleep(60 * 60 * 1000);
                } else {
                    logger.info("inspectionPointDataInThread wait for 5 minutes...");
                    Thread.sleep(5 * 60 * 1000);
                }
            } catch (Exception e) {
                logger.error("inspectionPointDataInThread: " + e);
            }

        }
    }

    private void getAllInspectionPointData(){
        try {
            List<InspectionPointDto> list  = inspectionPointMapper.selectAllApi();
            System.out.println(list.size());
            if (null != list && list.size() > 0) {
                for (InspectionPointDto dto : list) {
                    dataCenter.pushInspectionPointList(dto);
                }
            }
            logger.info("inspectionPointDataInThread========================" + dataCenter.getInspectionPointListSize());
        } catch (Exception e) {
            logger.error("inspectionPointDataInThread getAllInspectionData :" + e);
        }
    }
}
