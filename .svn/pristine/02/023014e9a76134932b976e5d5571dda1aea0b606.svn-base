package com.mingcloud.proxy.logiclayer.cheryhandler;

import com.mingcloud.proxy.datacenter.DataCenter;
import com.mingcloud.proxy.datalayer.dao.archiveinfo.HumanMapper;
import com.mingcloud.proxy.datalayer.dto.archiveinfo.HumanDto;
import com.mingcloud.proxy.util.JdbcChange;
import com.mingcloud.proxy.util.SpringContextUtil;
import org.apache.log4j.Logger;

import java.util.List;

/**
 * 奇瑞作业人员表（WORK_SUPPLIER）
 */
public class HumanDataInThread implements Runnable {

    private static Logger logger = Logger.getLogger(HumanDataInThread.class);

    private JdbcChange jdbcChange = JdbcChange.getJdbcChange();

    private DataCenter dataCenter = DataCenter.getInstance();

    private HumanMapper humanMapper = SpringContextUtil.getBean("humanMapper");

    @Override
    public void run() {
        logger.info("HumanDataInThread begin");
        jdbcChange.changeJdbc(JdbcChange.oracleDataSource);
        while(true) {
            try {
                if(dataCenter.getHumanListSize() < DataCenter.COMMONRECORDEXLIST_MAX_LENGTH) {
                    getAllHumanData();
                }
                logger.info("HumanDataInThread wait for 20 minutes...");
                Thread.sleep(20 * 60 * 1000);
            } catch (Exception e) {
                logger.error("HumanDataInThread: " + e);
            }
        }
    }

    private void getAllHumanData(){
        List<HumanDto> humanList = null;
        try {
            humanList = humanMapper.selectAllHuman();
            logger.info("humanListSize====" + humanList.size());
            if (humanList != null && !humanList.isEmpty()) {
                for (HumanDto dto : humanList) {
                    dataCenter.pushHumanList(dto);
                }
                logger.info("HumanDataInThread getAllHumanData succeeded...");
            }
        } catch (Exception e) {
            logger.error("HumanDataInThread getAllHumanData: " + e);
        }
    }

}
