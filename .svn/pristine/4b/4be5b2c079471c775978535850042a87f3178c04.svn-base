package com.mingcloud.proxy.logiclayer.stockhandler;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import org.apache.log4j.Logger;

import com.mingcloud.proxy.datacenter.DataCenter;
import com.mingcloud.proxy.datalayer.dao.archiveinfo.CurrentstockMapper;
import com.mingcloud.proxy.datalayer.dto.archiveinfo.CommonrecodeexDto;
import com.mingcloud.proxy.datalayer.entity.archiveinfo.CurrentStockEntity;
import com.mingcloud.proxy.util.DateHelper;
import com.mingcloud.proxy.util.JdbcChange;
import com.mingcloud.proxy.util.SpringContextUtil;

public class StockDataInThread implements Runnable {
	private static Logger logger = Logger.getLogger(StockDataInThread.class);

	private JdbcChange jdbcChange = JdbcChange.getJdbcChange();

	private DataCenter dataCenter = DataCenter.getInstance();

	private CurrentstockMapper currentstockMapper = SpringContextUtil.getBean("currentstockMapper");

	public StockDataInThread() {
		// TODO Auto-generated constructor stub
		//设置数据源为sqlserver
		jdbcChange.changeJdbc(JdbcChange.sqlServerDataSource);
	}

	public void run() {
		// TODO Auto-generated method stub
		logger.info("StockDataInThread begin");

		TimerTask task = new TimerTask() {
			@Override
			public void run() {
				ThreadBegin();
				logger.info("StockDataInThread wait one day");
			}
		};
		// 设置执行时间
		Date date = DateHelper.getTimeStockDataInThread();
		// 设置为daemon线程，当程序只有daemon线程的时候，会自动终止运行
		Timer timer = new Timer("StockDataInThread", true);
		// 每天的date时刻执行task
		timer.schedule(task, date, 24 * 60 * 60 * 1000);
	}

	public void ThreadBegin() {
		try {
			GetAllStockData();
			Thread.sleep(1000);
		} catch (Exception e) {
			logger.error("StockDataInThread:" + e);
		}
	}

	// 获取备件编码、仓库号、库存
	public void GetAllStockData() {
		try {
			List<CurrentStockEntity> list = new ArrayList<CurrentStockEntity>();
			list = currentstockMapper.selectAll();

			if (list != null && !list.isEmpty()) {
				for (CurrentStockEntity currentStockEntity : list) {
					if (currentStockEntity.getCInvCode() != null && currentStockEntity.getcWhCode() != null) {
						CommonrecodeexDto commonrecodeexDto = new CommonrecodeexDto();
						commonrecodeexDto.setExtravarchar1(currentStockEntity.getCInvCode());
						commonrecodeexDto.setExtravarchar2(currentStockEntity.getcWhCode());
						commonrecodeexDto.setExtradecimal1(currentStockEntity.getiQuantity());
						dataCenter.pushStockCommonrecodeexlist(commonrecodeexDto);
					}
				}
				logger.info("StockDataInThread.GetAllStockData succeeded...");
			}
		} catch (Exception e) {
			logger.error("StockDataInThread.GetAllStockData:" + e);
		}
	}

}
