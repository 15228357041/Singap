package com.mingcloud.proxy.logiclayer.messagehandler.messagedistance;


import com.mingcloud.proxy.datalayer.dto.archiveinfo.MessageSourceDto;
import com.mingcloud.proxy.datalayer.entity.archiveinfo.SucmessagelogEntity;
import com.mingcloud.proxy.logiclayer.messagehandler.MessageSourceDataInThread;
import com.mingcloud.proxy.logiclayer.messagehandler.messagedto.MessageDto;

import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Date;
import java.util.Properties;

/**
 * Created by zyn on 2018/8/3
 */
public class EmailMessage implements MessageStrategy {

    //邮件相关
    private static Session session;
    private static EmailMessage emailMessage;

    static {
        // 创建邮件配置
        Properties props = new Properties();
        props.setProperty("mail.transport.protocol", MessageSourceDataInThread.mtransportprotocol); // 使用的协议（JavaMail规范要求）
        props.setProperty("mail.smtp.host", MessageSourceDataInThread.msmtpserver); // 发件人的邮箱的 SMTP 服务器地址
        props.setProperty("mail.smtp.port", MessageSourceDataInThread.msmtpport);
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.setProperty("mail.smtp.auth", MessageSourceDataInThread.msmtpauth); // 需要请求认证
        props.setProperty("mail.smtp.ssl.enable", MessageSourceDataInThread.msmtpssl);// 开启ssl
        // 根据邮件配置创建会话，注意session别导错包
        session = Session.getDefaultInstance(props);
        // 开启debug模式，可以看到更多详细的输入日志
        session.setDebug(false);
    }

    private EmailMessage() {
    }

    public static EmailMessage getInstance() {
        if (emailMessage == null) {
            emailMessage = new EmailMessage();
        }
        return emailMessage;
    }

    public boolean sendMessage(MessageDto dto) {
        MessageSourceDto messageSourceDto = dto.getMessageSourceDto();
        SucmessagelogEntity sucmessagelogEntity = new SucmessagelogEntity();
        sucmessagelogEntity.setKeyword(messageSourceDto.getKeyword());
        sucmessagelogEntity.setKeywordvalue(dto.getResultMap().get(messageSourceDto.getKeyword()));
        sucmessagelogEntity.setMessagesourceid(messageSourceDto.getId());
        try {
            // 根据会话创建邮件
            MimeMessage msg = new MimeMessage(session);
            // address邮件地址, personal邮件昵称, charset编码方式
            InternetAddress fromAddress = new InternetAddress(MessageSourceDataInThread.maccount,
                    null, "utf-8");
            // 设置发送邮件方
            msg.setFrom(fromAddress);
            InternetAddress receiveAddress = new InternetAddress(
                    dto.getAcceptor(), "test", "utf-8");
            // 设置邮件接收方
            msg.setRecipient(Message.RecipientType.TO, receiveAddress);
            // 设置邮件标题
            msg.setSubject(messageSourceDto.getEmailtitle(), "utf-8");
            msg.setText(dto.getMessage());
            // 设置显示的发件时间
            msg.setSentDate(new Date());
            // 保存设置
            msg.saveChanges();
            //获取传输通道
            Transport transport = session.getTransport();
            transport.connect(MessageSourceDataInThread.msmtpserver, MessageSourceDataInThread.maccount, MessageSourceDataInThread.mpwd);
            //连接，并发送邮件
            transport.sendMessage(msg, msg.getAllRecipients());
            transport.close();
            sucmessagelogEntity.setResultcontent("sent mail Successfully");
            sucmessagelogEntity.setCreatedate(new Date());
            sucmessagelogEntity.setContent(dto.getMessage());
            sucmessagelogEntity.setAcceptor(dto.getAcceptor());
            dto.getSucmessagelogData().addSucmessagelogData(sucmessagelogEntity);
            System.out.println("sent mail successfully:" + sucmessagelogEntity);
            return false;
        } catch (Exception e) {
            e.printStackTrace();
            return true;
        }
    }

}
