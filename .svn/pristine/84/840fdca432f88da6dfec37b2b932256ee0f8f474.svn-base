package com.mingcloud.proxy.logiclayer.huaweihandler;

import java.util.Date;

import org.apache.log4j.Logger;

import com.mingcloud.proxy.datacenter.DataCenter;
import com.mingcloud.proxy.datalayer.dao.archiveinfo.MaintenanceobjectgroupMapper;
import com.mingcloud.proxy.datalayer.dto.archiveinfo.MaintenanceobjectgroupDto;
import com.mingcloud.proxy.datalayer.entity.archiveinfo.MaintenanceobjectgroupEntity;
import com.mingcloud.proxy.util.JdbcChange;
import com.mingcloud.proxy.util.SpringContextUtil;

public class MaintenanceobjectgroupDataOutThread implements Runnable {
	private static Logger logger = Logger.getLogger(MaintenanceobjectgroupDataOutThread.class);
	
	private JdbcChange jdbcChange = JdbcChange.getJdbcChange();
	
	private DataCenter dataCenter = DataCenter.getInstance();
	
	private MaintenanceobjectgroupMapper maintenanceobjectgroupMapper = SpringContextUtil.getBean("maintenanceobjectgroupMapper");
	
	private static Integer grouplistSize = 0;
	
	public MaintenanceobjectgroupDataOutThread() {
		// TODO Auto-generated constructor stub
		// 设置数据源为MySql
		jdbcChange.changeJdbc(JdbcChange.mySqlDataSource);
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		logger.info("MaintenanceobjectgroupDataOutThread begin");
		
		while(true) {
			try {
				if(dataCenter.getMaintenancegrouplistSize() > 0) {
					grouplistSize = dataCenter.getMaintenancegrouplistSize();
					InsertMaintenancegroup();
					logger.info("MaintenanceobjectgroupDataOutThread Size:" + (grouplistSize-1));
				}
				Thread.sleep(50);
			} catch(Exception e) {
				logger.error("MaintenanceobjectgroupDataOutThread: " + e);
			}
		}
	}

	private void InsertMaintenancegroup() {
		// TODO Auto-generated method stub
		try {
			MaintenanceobjectgroupDto dto = dataCenter.popMaintenancegrouplist();
			MaintenanceobjectgroupEntity entity = new MaintenanceobjectgroupEntity();
			entity.setMogroupkey(dto.getMogroupkey());
			MaintenanceobjectgroupEntity groupentity = maintenanceobjectgroupMapper.get(entity);
			Date date = new Date();
			if(groupentity !=null && !groupentity.equals("")) {
				if(groupentity.getMogroupname() == null || !groupentity.getMogroupname().equals(dto.getMogroupname())) {
					entity.setMogroupname(dto.getMogroupname());
					entity.setId(groupentity.getId());
					entity.setModificationdate(date);
					maintenanceobjectgroupMapper.update(entity);
					logger.info("MaintenanceobjectgroupDataOutThread update succeeded...");
				}
			} else {
				entity.setMogroupname(dto.getMogroupname());
				entity.setCreatedate(date);
				entity.setModificationdate(date);
				maintenanceobjectgroupMapper.insert(entity);
				logger.info("MaintenanceobjectgroupDataOutThread insert succeeded...");
			}
		} catch(Exception e) {
			logger.error("MaintenanceobjectgroupDataOutThread InsertMaintenancegroup: " + e);
		}
	}

}
